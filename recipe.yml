name: DoctorFlynt/Vanilla-OS_Minisforum-V3 # Replace this name with your image name
id: custom # Replace this ID with your image ID
stages:
- id: build
  base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: self-maintained # Optionally, Replace this with your name
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update

  # Put your custom actions behind this comment

  - name: Minisforum-V3-Packages # Sample module using the built-in Apt module to install packages
    type: apt
    source:
      packages:
      - gnome-tweaks
      - gnome-screenshot
      - xclip
    #  - alsa-tools 
    #  - alsa-tools-gui
    #  - debconf-utils
    
  - name: howdy
    type: apt
    source:
      packages:
        - python3
        - python3-pip
        - python3-setuptools
        - python3-wheel
        
  #- name: howdy-cmake
  #  type: shell
  #  commands:
     # - cmake make build-essential libpam0g-dev libinih-dev libevdev-dev python3-dev libopencv-dev
 #     - dpkg -i --force-confdef /manual-deb-pkgs/howdy_2.6.1.deb 
 #     - echo 'prof b' | debconf-set-selections DEBIAN_FRONTEND="noninteractive" apt install -y /manual-deb-pkgs/howdy_2.6.1.deb 

  - name: virt-dependencies
    type: apt
    source:
      packages:
      - qemu-kvm
      - qemu-system
      - qemu-utils
      - libvirt-daemon-system
      - libvirt-clients
      - bridge-utils
      - virt-manager
      - looking-glass-client
      - swtpm
      - swtpm-tools

  - name: winapps-org-config 
    type: shell
    commands:
     - mkdir -p /root/.config/winapps
    
  - name: tesseract
    type: apt
    source:
      packages:
        - tesseract-ocr
        - tesseract-ocr-all
        
  
  - name: example-modules # Sample module demonstrating importing local and remote modules
    type: includes
    includes:
      - modules/50-install-debs.yml # Sample local module present in this repository
      - modules/install-sh.yml
      - gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      - https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

   # END custom actions


  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
